%head
  %meta{:charset => "utf-8"}
  %meta{:content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible"}

  %title= yield :title

  %meta{:content => "", :name => "description"}
  %meta{:content => "", :name => "author"}

  = csrf_meta_tag
  = stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
  = stylesheet_link_tag 'application', media: 'all'
  = javascript_pack_tag 'application'
  = javascript_pack_tag 'navbar'

%body
  .animation-root
    .animation-container
      #left-gutter-animation.gutter-animation
  .animation-root.right
    .animation-container
      #right-gutter-animation.gutter-animation
  .main-container
    = render :partial => "layouts/navbar"
    = yield

:javascript
  class GutterAnimation {
    constructor(elementId) {
      this.elementId = elementId;
    }
  }
  const leftGutter = document.getElementById('left-gutter-animation');
  const rightGutter = document.getElementById('right-gutter-animation');
  var emoji = 'üëê';
  var circles = [];

  for (var i = 0; i < 15; i++) {
    addCircle(i * 150, [10, 300], emoji);
    addCircle(i * 150, [10, -300], emoji);
    addCircle(i * 150, [10 - 200, -300], emoji);
    addCircle(i * 150, [10 + 200, 300], emoji);
    addCircle(i * 150, [10 - 400, -300], emoji);
    addCircle(i * 150, [10 + 400, 300], emoji);
    addCircle(i * 150, [10 - 600, -300], emoji);
    addCircle(i * 150, [10 + 600, 300], emoji);
  }

  function addCircle(delay, range, color) {
    setTimeout(function() {
      var c = new Circle(range[0] + Math.random() * range[1], 80 + Math.random() * 4, color, {
        x: -0.15 + Math.random() * 0.3,
        y: 1 + Math.random() * 1
      }, range);
      circles.push(c);
    }, delay);
  }
  function Circle(x, y, c, v, range) {
    var _this = this;
    this.x = x;
    this.y = y;
    this.color = c;
    this.v = v;
    this.range = range;
    this.element = document.createElement('span');
    /*this.element.style.display = 'block';*/
    this.element.style.opacity = 0;
    this.element.style.position = 'absolute';
    this.element.style.fontSize = '26px';
    this.element.style.color = 'hsl('+(Math.random()*360|0)+',80%,50%)';
    this.element.innerHTML = c;
    leftGutter.appendChild(this.element);
    rightGutter.appendChild(this.element);

    this.update = function() {
      if (_this.y > 800) {
        _this.y = 80 + Math.random() * 4;
        _this.x = _this.range[0] + Math.random() * _this.range[1];
      }
      _this.y += _this.v.y;
      _this.x += _this.v.x;
      this.element.style.opacity = 1;
      this.element.style.transform = 'translate3d(' + _this.x + 'px, ' + _this.y + 'px, 0px)';
      this.element.style.webkitTransform = 'translate3d(' + _this.x + 'px, ' + _this.y + 'px, 0px)';
      this.element.style.mozTransform = 'translate3d(' + _this.x + 'px, ' + _this.y + 'px, 0px)';
    };
  }

  function animate() {
    for (var i in circles) {
      circles[i].update();
    }
    requestAnimationFrame(animate);
  }

  animate();
